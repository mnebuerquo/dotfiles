# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#. /etc/bashrc

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# mark's vim command line trick
set -o vi
export EDITOR=vi

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
# ... or force ignoredups and ignorespace
#HISTCONTROL=ignoredups

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

source ~/bin/ps1.sh

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# make this only happen with OSX, not linux
if [[ "$OSTYPE" == "darwin"* ]]; then
	if [ -f $(brew --prefix)/etc/bash_completion ]; then
		. $(brew --prefix)/etc/bash_completion
	fi
fi

# so we get the right vim in osx
# this could be an alias instead if necessary
if [[ "$OSTYPE" == "darwin"* ]]; then
    PATH="/usr/local/bin:$PATH"
fi

# Make capslock work as ctrl instead
# Turn off capslock in case it was already on
# this gives an error if xmodmap is not installed such as when you don't
# have X11, like on servers. Just send the output to dev null so we
# don't have to look at it when we start bash.
# TODO: we should move this to a script in bin and source it from here.
~/bin/bashrc-capslock.sh

# for OSX, use color in bash
export CLICOLOR=1
# close to solarized
# https://github.com/seebi/dircolors-solarized/issues/10
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

# in case we need proxy settings
if [ -e ~/.bash_proxy ]; then
	. ~/.bash_proxy
fi

# alternate proxy settings which aren't auto-detected
if [ -e ~/.mr_proxy ]; then
	. ~/.mr_proxy
else
	# set proxy settings if we're somewhere where we need to use it
	detectsetproxy
fi

# needed for React-Native android development
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
# set default version of JDK
export JAVA_HOME=`/usr/libexec/java_home -v 1.8.0_292`

# NVM wants to install this in my bashrc, so I guess I'll allow it.
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
if [ -f ~/.nvm/nvm.sh ]; then
	. ~/.nvm/nvm.sh
fi
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
